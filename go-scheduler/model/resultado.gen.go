// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
    "errors"
    "database/sql/driver"
    "encoding/json"
	"time"
)


type JSONB []interface{}

func (a JSONB) Value() (driver.Value, error) {
    return json.Marshal(a)
}

func (a *JSONB) Scan(value interface{}) error {
    b, ok := value.([]byte)
    if !ok {
        return errors.New("type assertion to []byte failed")
    }
    return json.Unmarshal(b,&a)
}

const TableNameResultado = "resultado"

type Resultado struct {
	ID      int64     `gorm:"column:id;primaryKey" json:"id"`
	Data    time.Time `gorm:"column:data" json:"data"`
	Numeros JSONB    `gorm:"column:numeros" json:"numeros"`
	JogoID  int64     `gorm:"column:jogo_id" json:"jogo_id"`
}


func (*Resultado) TableName() string {
	return TableNameResultado
}
